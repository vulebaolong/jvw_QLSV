package database;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.*;

public class DatabaseInitializer {

    private static final String HOST = "localhost";
    private static final int PORT = 3307;
    private static final String USER = "root";
    private static final String PASSWORD = "1234";
    private static final String DB_NAME = "db_QLSV";
    private static final String SCHEMA_FILE = "src/main/java/database/schema.sql";
    private static final String INIT_DATA_FILE = "src/main/java/database/init-data.sql";

    // üîπ K·∫øt n·ªëi ƒë·∫øn MySQL m√† kh√¥ng ch·ªâ ƒë·ªãnh database
    private static final String URI_NOT_DB = String.format("jdbc:mysql://%s:%d/?user=%s&password=%s", HOST, PORT, USER, PASSWORD);

    // üîπ K·∫øt n·ªëi ƒë·∫øn MySQL v·ªõi database c·ª• th·ªÉ
    private static final String URI = String.format("jdbc:mysql://%s:%d/%s?user=%s&password=%s", HOST, PORT, DB_NAME, USER, PASSWORD);

    // üîπ K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu m√† kh√¥ng ch·ªâ ƒë·ªãnh database
    private static Connection getRootConnection() throws SQLException {
        return DriverManager.getConnection(URI_NOT_DB);
    }

    // üîπ Ki·ªÉm tra database c√≥ t·ªìn t·∫°i kh√¥ng, n·∫øu kh√¥ng th√¨ t·∫°o database v√† import file SQL
    public static void checkAndImportDatabase() {
        try (Connection conn = getRootConnection(); Statement stmt = conn.createStatement()) {

            // Ki·ªÉm tra database c√≥ t·ªìn t·∫°i hay kh√¥ng
            String checkDatabase = "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '" + DB_NAME + "'";
            ResultSet rs = stmt.executeQuery(checkDatabase);

            if (!rs.next()) {
                System.out.println("üîπ Database ch∆∞a t·ªìn t·∫°i, ƒëang t·∫°o v√† import d·ªØ li·ªáu...");

                // T·∫°o database m·ªõi
                stmt.executeUpdate("CREATE DATABASE " + DB_NAME);
                System.out.println("‚úÖ Database " + DB_NAME + " ƒë√£ ƒë∆∞·ª£c t·∫°o!");

                // Import file SQL v√†o database
                importSQLFile(SCHEMA_FILE);
                importSQLFile(INIT_DATA_FILE);
            } else {
                System.out.println("‚úÖ Database " + DB_NAME + " ƒë√£ t·ªìn t·∫°i.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // üîπ Import file SQL v√†o database
    private static void importSQLFile(String filePath) {
        try (Connection conn = DriverManager.getConnection(URI); Statement stmt = conn.createStatement(); BufferedReader br = new BufferedReader(new FileReader(filePath))) {

            StringBuilder sql = new StringBuilder();
            String line;
            while ((line = br.readLine()) != null) {
                if (!line.trim().isEmpty() && !line.startsWith("--")) { // B·ªè qua d√≤ng tr·ªëng & comment
                    sql.append(line).append("\n");
                    if (line.endsWith(";")) { // Khi g·∫∑p d·∫•u `;`, th·ª±c thi c√¢u l·ªánh
                        System.out.println(sql.toString());
                        stmt.executeUpdate(sql.toString());
                        sql.setLength(0); // Reset StringBuilder
                    }
                }
            }
            System.out.println("‚úÖ Import file SQL th√†nh c√¥ng!");
        } catch (SQLException | IOException e) {
            System.err.println("‚ùå L·ªói khi import file SQL:");
            e.printStackTrace();
        }
    }

    // üîπ G·ªçi t·∫•t c·∫£ c√°c b∆∞·ªõc tr√™n khi ·ª©ng d·ª•ng kh·ªüi ƒë·ªông
    public static void initializeDatabase() {
        checkAndImportDatabase();
    }
}
