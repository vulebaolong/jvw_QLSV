/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import components.DeleteButtonColumn;
import dao.StudentDAO;
import model.Student;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.sql.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author vulebaolong
 */
public class AdminPanel extends javax.swing.JPanel {

    private StudentDAO studentDAO;

    /**
     * Creates new form Home
     */
    public AdminPanel() {
        initComponents();
        studentDAO = new StudentDAO();
        loadStudentData();
    }

    private void loadStudentData() {
        List<Student> students = studentDAO.getAllStudents(); // Lấy danh sách sinh viên

        // Lấy model của JTable
        DefaultTableModel model = (DefaultTableModel) tbListStudent.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ

        // Thêm từng sinh viên vào bảng
        for (Student s : students) {
            model.addRow(new Object[]{
                s.getId(),
                s.getFullName(),
                s.getBirthDay(),
                s.getGender(),
                s.getPhone(),
                s.getAddress()
            });
        }

        DeleteButtonColumn.addDeleteButton(tbListStudent, 6, (row) -> {
            int studentId = (int) model.getValueAt(row, 0); // Lấy ID sinh viên
            JOptionPane.showMessageDialog(this, "✅ Xóa sinh viên thành công!" + studentId, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//            boolean success = studentDAO.deleteStudentById(studentId);
//            if (success) {
//                JOptionPane.showMessageDialog(this, "✅ Xóa sinh viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                model.removeRow(row); // Xóa dòng khỏi bảng
//            } else {
//                JOptionPane.showMessageDialog(this, "❌ Xóa sinh viên thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbListStudent = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel1.setText("Danh Sách Sinh Viên");

        tbListStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Họ Tên", "Ngày Sinh", "Giới Tính", "Phone", "Adress", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbListStudent.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbListStudentPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(tbListStudent);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(362, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbListStudentPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbListStudentPropertyChange
        if ("tableCellEditor".equals(evt.getPropertyName())) {
            if (!tbListStudent.isEditing()) {
                int row = tbListStudent.getSelectedRow();
                int column = tbListStudent.getEditingColumn();

                if (row == -1 || column == 6) { // Nếu đang chỉnh sửa cột "Xóa", bỏ qua
                    return;
                }

                DefaultTableModel model = (DefaultTableModel) tbListStudent.getModel();
                Student studentExists = null;

                try {
                    int studentId = (int) model.getValueAt(row, 0);

                    studentExists = studentDAO.getStudentById(studentId);
                    if (studentExists == null) {
                        JOptionPane.showMessageDialog(this, "❌ Sinh viên không tồn tại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    String fullName = (String) model.getValueAt(row, 1);

                    Object birthDayObj = model.getValueAt(row, 2);
                    Date birthDay;

                    if (birthDayObj instanceof Date) {
                        birthDay = (Date) birthDayObj;
                    } else {
                        birthDay = Date.valueOf(birthDayObj.toString());
                    }

                    String gender = (String) model.getValueAt(row, 3);
                    String phone = (String) model.getValueAt(row, 4);
                    String address = (String) model.getValueAt(row, 5);

                    if (studentExists.getFullName().equals(fullName)
                            && studentExists.getBirthDay().equals(birthDay)
                            && studentExists.getGender().equals(gender)
                            && studentExists.getPhone().equals(phone)
                            && studentExists.getAddress().equals(address)) {

                        System.out.println("Không có thay đổi, bỏ qua cập nhật.");
                        return;
                    }

                    System.out.println("studentId: " + studentId);
                    System.out.println("fullName: " + fullName);
                    System.out.println("birthDay: " + birthDay);
                    System.out.println("gender: " + gender);
                    System.out.println("phone: " + phone);
                    System.out.println("address: " + address);

                    Student student = new Student(studentId, fullName, birthDay, gender, phone, address);

                    boolean success = studentDAO.updateStudent(student);

                    if (success) {
                        JOptionPane.showMessageDialog(this, "✅ Cập nhật sinh viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "❌ Cập nhật sinh viên thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {

                    if (studentExists != null) {
                        System.out.println(studentExists);
                        model.setValueAt(studentExists.getFullName(), row, 1);
                        model.setValueAt(studentExists.getBirthDay(), row, 2);
                        model.setValueAt(studentExists.getGender(), row, 3);
                        model.setValueAt(studentExists.getPhone(), row, 4);
                        model.setValueAt(studentExists.getAddress(), row, 5);
                    }

                    System.err.println(ex);
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "❌ Cập nhật sinh viên thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);

                }

            }
        }
    }//GEN-LAST:event_tbListStudentPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbListStudent;
    // End of variables declaration//GEN-END:variables
}
